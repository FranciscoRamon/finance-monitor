plugins {
    id 'java'
    id 'io.quarkus'
    id 'org.jetbrains.kotlin.jvm'
    id "org.jetbrains.kotlin.plugin.allopen" version "1.9.23"
    id "org.jetbrains.kotlin.plugin.noarg" version "1.9.23"
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-rest-jsonb'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-jacoco'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-opentelemetry'
    implementation 'io.quarkus:quarkus-logging-json'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-micrometer'
    implementation 'io.quarkus:quarkus-arc'
    implementation 'org.jetbrains.kotlin:kotlin-allopen:1.9.23'
    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}

group 'com.endoffile'
version '1.0-SNAPSHOT'

noArg {
    annotation("jakarta.persistence.Entity")
}

allOpen {
    annotation("jakarta.persistence.Entity")
}

java {
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
kotlin {
    jvmToolchain(21)
}
